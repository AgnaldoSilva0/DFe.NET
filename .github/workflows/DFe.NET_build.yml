name: DFe.NET_build

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
    #    os: [ ubuntu-latest, windows-latest, macos-latest ]
        os: [ windows-2022 ]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setando Versao
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d.%H%M')"
      
    - name: Versao
      run: echo ${{ steps.date.outputs.date }}
      
    - name: Setup .NET 6.0.x
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    
    - name: Build/Restore Base
      run: | 
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\DFe.Classes\DFe.Classes.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\DFe.Utils\DFe.Utils.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\DFe.Wsdl\DFe.Wsdl.csproj" -c "Release"
    - name: Build/Restore NFe
      run: | 
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\NFe.Classes\NFe.Classes.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\NFe.Servicos\NFe.Servicos.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\NFe.Utils\NFe.Utils.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\NFe.Wsdl\NFe.Wsdl.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\NFe.Wsdl.Standard\NFe.Wsdl.Standard.csproj" -c "Release"
        
    - name: Build/Restore MDFe
      run: | 
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\MDFe.Classes\MDFe.Classes.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\MDFe.Servicos\MDFe.Servicos.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\MDFe.Utils\MDFe.Utils.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\MDFe.Wsdl\MDFe.Wsdl.csproj" -c "Release"
        
    - name: Build/Restore MDFe
      run: | 
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\CTe.Classes\CTe.Classes.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\CTe.Servicos\CTe.Servicos.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\CTe.Utils\CTe.Utils.csproj" -c "Release"
        dotnet build -p:Version=${{ steps.date.outputs.date }} ".\CTe.Wsdl\CTe.Wsdl.csproj" -c "Release"
        
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal
  
    - name: Pack
      run: | 
        dotnet pack -v minimal -c Release -p:NuspecProperties=version=${{ steps.date.outputs.date }} -p:PackageVersion=${{ steps.date.outputs.date }} NuGet\Zeus.Net.NFe.NFCe\Zeus.Net.NFe.NFCe.csproj
        dotnet pack -v minimal -c Release -p:NuspecProperties=version=${{ steps.date.outputs.date }} -p:PackageVersion=${{ steps.date.outputs.date }} NuGet\Zeus.Net.MDFe\Zeus.Net.MDFe.csproj
        dotnet pack -v minimal -c Release -p:NuspecProperties=version=${{ steps.date.outputs.date }} -p:PackageVersion=${{ steps.date.outputs.date }} NuGet\Zeus.Net.CTe\Zeus.Net.CTe.csproj

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: nupkg
        path: | 
          NuGet/Zeus.Net.NFe.NFCe/bin/Release/Zeus.Net.NFe.NFCe.${{ steps.date.outputs.date }}.nupkg
          NuGet/Zeus.Net.MDFe/bin/Release/Zeus.Net.MDFe.${{ steps.date.outputs.date }}.nupkg
          NuGet/Zeus.Net.CTe/bin/Release/Zeus.Net.CTe.${{ steps.date.outputs.date }}.nupkg